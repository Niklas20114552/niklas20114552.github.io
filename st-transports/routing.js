const network={lines:[{name:"UST 1",stations:["Evergreen","Outpost","Seacrestica","Pagasa City","Illyria"]},{name:"UST 2",stations:["Illyria","Pagasa City","Seacrestica","Outpost","Evergreen"]},{name:"UST 3",stations:["Malus","Outpost"]},{name:"UST 4",stations:["Outpost","Malus"]}],stations:[{name:"Evergreen",lines:["UST 1","UST 2"]},{name:"Outpost",lines:["UST 1","UST 2","UST 3","UST 4"]},{name:"Seacrestica",lines:["UST 1","UST 2"]},{name:"Pagasa City",lines:["UST 1","UST 2"]},{name:"Illyria",lines:["UST 1","UST 2"]},{name:"Malus",lines:["UST 3","UST 4"]}],doublelines:[["UST 1","UST 2"],["UST 3","UST 4"]],traveltimes:[{start:"Evergreen",end:"Outpost",time:42},{start:"Outpost",end:"Seacrestica",time:24},{start:"Pagasa City",end:"Seacrestica",time:80},{start:"Illyria",end:"Pagasa City",time:67},{start:"Malus",end:"Outpost",time:120}]};function findRoutes(e,t,n){const s=(t,n)=>{for(const s of e.doublelines)if(s.includes(t)&&s.includes(n))return!0;return!1},a=(e,t,o,u=null)=>{if(e!==n)for(const n of i[e]){if(u&&s(u,n))continue;const i=r[n];for(let s=i.indexOf(e)+1;s<i.length;s++){const r=i[s];o.has(r)||(o.add(r),t.length&&t[t.length-1].line===n?t[t.length-1].stations.push(r):t.push({line:n,stations:[e,r]}),a(r,t,o,n),o.delete(r),t.length&&t[t.length-1].stations[t[t.length-1].stations.length-1]===r&&(2===t[t.length-1].stations.length?t.pop():t[t.length-1].stations.pop()))}}else l.push([...t])},i=e.stations.reduce(((e,t)=>(e[t.name]=t.lines,e)),{}),r=e.lines.reduce(((e,t)=>(e[t.name]=t.stations,e)),{}),l=[];return a(t,[],new Set([t])),l}function getTravelTime(e,t){let n,s;e.localeCompare(t)>0?(n=t,s=e):(n=e,s=t);for(var a=0;a<network.traveltimes.length;a++)if(network.traveltimes[a].start==n&&network.traveltimes[a].end==s)return network.traveltimes[a].time}function filterArrayByBounds(e,t,n){let s=e.indexOf(t),a=e.indexOf(n);return-1===s||-1===a?[]:e.slice(s,a+1)}function getStops(e,t,n){let s;for(var a=0;a<network.lines.length;a++)network.lines[a].name==n&&(s=network.lines[a].stations);return filterArrayByBounds(s,e,t)}function getTravelTimeForStops(e){let t=0;for(var n=0;n<e.length-1;n++)t+=getTravelTime(e[n],e[n+1]);return t}